#include "main.h"
#include <dirent.h>

int compare_entries(const struct dirent **a, const struct dirent **b)
{
    return strcoll((*a)->d_name, (*b)->d_name);
}

int _ls(void)
{
    const char *directory_path = "/path/to/your/directory"; // Replace with the directory path you want to list

    /* Open the directory */
    DIR *dir = opendir(directory_path);
    if (dir == NULL)
    {
        perror("opendir");
        exit(EXIT_FAILURE);
    }

    /* Read directory entries into an array */
    struct dirent *entry;
    struct dirent **entries = NULL;
    int num_entries = 0;
    while ((entry = readdir(dir)) != NULL)
    {
        if (entry->d_name[0] != '.') // Exclude hidden files/directories
        {
            num_entries++;
            entries = (struct dirent **)realloc(entries, num_entries * sizeof(struct dirent *));
            if (entries == NULL)
            {
                perror("realloc");
                exit(EXIT_FAILURE);
            }
            entries[num_entries - 1] = entry;
        }
    }

    /* Sort the entries alphabetically */
    qsort(entries, num_entries, sizeof(struct dirent *), (int (*)(const void *, const void *))compare_entries);

    /* Print the sorted entries */
    for (int i = 0; i < num_entries; i++)
    {
        printf("%s\n", entries[i]->d_name);
    }

    /* Clean up */
    closedir(dir);
    free(entries);

	exit(0);
    return 0;
}